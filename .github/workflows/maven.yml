name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build WAR with Maven
        run: mvn -B package --file pom.xml -DskipTests

      - name: Create tomcat/webapps directory
        run: mkdir -p ./tomcat/webapps  # tomcat/webapps 디렉토리 생성

      - name: Move WAR to tomcat/webapps directory
        run: |
          cp target/ROOT.war ./tomcat/webapps/  # ROOT.war 파일을 tomcat/webapps 디렉토리로 복사

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker image
        run: |
          cd tomcat  # tomcat 디렉토리로 이동
          docker build -t ranpia/tomcat9:latest .  # 현재 디렉토리에서 Docker 이미지 빌드

      - name: Push Docker image
        run: |
          docker push ranpia/tomcat9:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: SSH to EC2 and Deploy
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          source: "docker-compose.yml"  # docker-compose.yml 파일을 전송
          target: "/tomcat"

      - name: SSH to EC2
        uses: appleboy/ssh-action@0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            cd /tomcat
            docker-compose pull
            docker-compose up -d
